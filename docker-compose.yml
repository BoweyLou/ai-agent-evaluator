version: '3.8'

services:
  api:
    build: ./api
    ports:
      - "${API_PORT:-8081}:8000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO=${GITHUB_REPO}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - PYTHONPATH=/app
    volumes:
      - ./api:/app
      - ./tasks:/app/tasks
      - ./results:/app/results
      - /app/__pycache__
    depends_on:
      - db
      - redis
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build: ./api
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - PYTHONPATH=/app
    volumes:
      - ./api:/app
      - ./tasks:/app/tasks
      - ./results:/app/results
    depends_on:
      - db
      - redis
    command: celery -A src.worker worker --loglevel=info

  web:
    build: ./web
    ports:
      - "${WEB_PORT:-3001}:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8081}
    volumes:
      - ./web:/app
      - /app/node_modules
    depends_on:
      - api
    command: npm start

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-evaluator}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT:-6381}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  redis_data: